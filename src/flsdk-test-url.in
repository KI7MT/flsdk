#!@PYTHON3@
#
# Name..........: @PROGRAM@ @VERSION@
# Execution.....: As normal user type: flsdk-test-url
# Copyright.....: @COPYRIGHT@
# License.......: @LICENSE@
# Contributors..: @AUTHORS@
# Comment.......: Part of the @PROGRAM@ Linux Project
#
# @PROGRAM@ is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation either version 3 of the License, or
# (at your option) any later version. 
#
# @PROGRAM@ is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#-------------------------------------------------------------------------#

import os
import sys
import re
import requests
from bs4 import BeautifulSoup 

# meta data
__author__ = "@AUTHORS"
__copyright__ = "@COPYRIGHT@"
__license__ = "@LICENSE@"
__version__ = "@VERSION@"
__email__ = "@BUGS@"
__status__ = "Development"

# process variables
app_list = ('comptext','comptty','flamp','fldigi','fllog','flmsg','flnet','flrig','flwkey','flwrap','linsim')
alpha_url = "http://sourceforge.net/projects/fldigi/files/alpha_tests/"
test_url = "https://sourceforge.net/projects/fldigi/files/test_suite/"
release_url ="https://sourceforge.net/projects/fldigi/files/"

# clear the screen
def clear_screen():
    """Clear based on the platform"""
    if sys.platform == 'win32':
        os.system('cls')
    else:
        os.system('clear')

if sys.platform == "win32":
    ext = ("zip" + "/download")
else:
    ext = ("gz" + "/download")

# generate alpha list versions
def alpha_list():
    source = requests.get(alpha_url)
    data = source.text
    soup = BeautifulSoup(data)

    print("Generating Alpha List")
    print("---------------------")
    for line in soup.findAll('a'):
        if line.has_attr('href'):
            if(line['href'].endswith(ext)):
                a1 = str(line['href'])
                af = a1.split("alpha_tests/", 1)[1][:-9]
                an = af.split("-", 1)[0]
                av = af.split("-", 1)[1][:-7]
                print(an + " " + av)
    print()

# generate test suite versions
def test_list():
    source = requests.get(test_url)
    data = source.text
    soup = BeautifulSoup(data)

    print("Generating TestSuite List")
    print("--------------------------")
    for line in soup.findAll('a'):
        if line.has_attr('href'):
            if(line['href'].endswith(ext)):
                a1 = str(line['href'])
                af = a1.split("test_suite/", 1)[1][:-9]
                tn = af.split("-", 1)[0]
                tv = af.split("-", 1)[1][:-7]
                print(tn + " " + tv)
    print()

# generate release application versions
def release_list():
    print("Generating Release List")
    print("-----------------------")
    for p in app_list:
        source = requests.get(release_url + p)
        data = source.text
        soup = BeautifulSoup(data)

        for line in soup.findAll('a'):
            if line.has_attr('href'):
                if(line['href'].endswith(ext)):
                    a1 = str(line['href'])
                    af = a1.split("files/" + p + "/", 1)[1][:-9]
                    rn = af.split("-", 1)[0]
                    rv = af.split("-", 1)[1][:-7]
                    print(rn + " " + rv)
    print()

if __name__ == "__main__":
    clear_screen()
    alpha_list()
    test_list()
    release_list()
